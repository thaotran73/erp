(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[4],{

/***/ "./ClientApp/app/routes/forms/cropper/cropper.component.html":
/*!*******************************************************************!*\
  !*** ./ClientApp/app/routes/forms/cropper/cropper.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"content-heading\">Image Cropper</div>\r\n<div class=\"image-cropper-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-4\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">Select an image file</div>\r\n                <div class=\"card-body\">\r\n                    <label for=\"image-input\" class=\"file-upload\">\r\n                        <button class=\"btn btn-secondary btn-block\">Upload Image</button>\r\n                        <input id=\"image-input\" type=\"file\" (change)=\"fileChangeListener($event)\">\r\n                    </label>\r\n                    <p class=\"pv\">Crop type:</p>\r\n                    <div class=\"btn-group btn-group-justified mb\">\r\n                        <label class=\"btn btn-secondary\" (click)=\"setRoundedMethod(false)\" [class.active]=\"!cropperSettings.rounded\">Square</label>\r\n                        <label class=\"btn btn-secondary\" (click)=\"setRoundedMethod(true)\" [class.active]=\"cropperSettings.rounded\">Circle</label>\r\n                    </div>\r\n                    <div class=\"result\" *ngIf=\"data1.image\">\r\n                        <p class=\"pv\">Cropped image</p>\r\n                        <img class=\"img-fluid img-thumbnail\" [class.rounded-circle]=\"cropperSettings.rounded\"  [src]=\"data1.image\" [width]=\"cropperSettings.croppedWidth\" [height]=\"cropperSettings.croppedHeight\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-8\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <img-cropper #cropper [image]=\"data1\" [settings]=\"cropperSettings\" (onCrop)=\"cropped($event)\"></img-cropper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./ClientApp/app/routes/forms/cropper/cropper.component.scss":
/*!*******************************************************************!*\
  !*** ./ClientApp/app/routes/forms/cropper/cropper.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__(/*! !../../../../../node_modules/css-loader!../../../../../node_modules/sass-loader/lib/loader.js!./cropper.component.scss */ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/cropper/cropper.component.scss");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./ClientApp/app/routes/forms/cropper/cropper.component.ts":
/*!*****************************************************************!*\
  !*** ./ClientApp/app/routes/forms/cropper/cropper.component.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var ng2_img_cropper_1 = __webpack_require__(/*! ng2-img-cropper */ "./node_modules/ng2-img-cropper/index.js");
var CropperComponent = /** @class */ (function () {
    function CropperComponent() {
        this.name = 'Angular2';
        this.cropperSettings = new ng2_img_cropper_1.CropperSettings();
        this.cropperSettings.noFileInput = true;
        this.cropperSettings.width = 200;
        this.cropperSettings.height = 200;
        this.cropperSettings.croppedWidth = 200;
        this.cropperSettings.croppedHeight = 200;
        this.cropperSettings.canvasWidth = 460;
        this.cropperSettings.canvasHeight = 400;
        this.cropperSettings.minWidth = 100;
        this.cropperSettings.minHeight = 100;
        this.cropperSettings.cropperDrawSettings.strokeColor = 'rgba(0,0,0,.25)';
        this.cropperSettings.cropperDrawSettings.strokeWidth = 2;
        this.cropperSettings.rounded = false;
        this.data1 = {};
    }
    CropperComponent.prototype.setRoundedMethod = function (value) {
        this.cropperSettings.rounded = value;
    };
    CropperComponent.prototype.cropped = function (bounds) {
        console.log(bounds);
    };
    CropperComponent.prototype.fileChangeListener = function ($event) {
        var image = new Image();
        var file = $event.target.files[0];
        var myReader = new FileReader();
        var that = this;
        myReader.onloadend = function (loadEvent) {
            image.src = loadEvent.target.result;
            that.cropper.setImage(image);
        };
        myReader.readAsDataURL(file);
    };
    CropperComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        core_1.ViewChild('cropper', undefined),
        __metadata("design:type", ng2_img_cropper_1.ImageCropperComponent)
    ], CropperComponent.prototype, "cropper", void 0);
    CropperComponent = __decorate([
        core_1.Component({
            selector: 'app-cropper',
            template: __webpack_require__(/*! ./cropper.component.html */ "./ClientApp/app/routes/forms/cropper/cropper.component.html"),
            styles: [__webpack_require__(/*! ./cropper.component.scss */ "./ClientApp/app/routes/forms/cropper/cropper.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], CropperComponent);
    return CropperComponent;
}());
exports.CropperComponent = CropperComponent;


/***/ }),

/***/ "./ClientApp/app/routes/forms/extended/extended.component.html":
/*!*********************************************************************!*\
  !*** ./ClientApp/app/routes/forms/extended/extended.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"content-heading\">\r\n    <div>\r\n        Form Extended\r\n        <small>Native ng2 elements to extend the form functions</small>\r\n    </div>\r\n</div>\r\n<!-- START card-->\r\n<div class=\"card card-default\">\r\n    <div class=\"card-header\">Form elements</div>\r\n    <div class=\"card-body\">\r\n        <form class=\"form-horizontal\" method=\"get\">\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Custom Switch</label>\r\n                    <div class=\"col-lg-4 col-md-10\">\r\n                        <div class=\"d-flex align-items-center mb-3\">\r\n                            <div>Switch Small</div>\r\n                            <div class=\"ml-auto\">\r\n                                <label class=\"switch switch-sm m-0\">\r\n                                    <input type=\"checkbox\" checked=\"checked\" />\r\n                                    <span></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex align-items-center mb-3\">\r\n                            <div>Switch</div>\r\n                            <div class=\"ml-auto\">\r\n                                <label class=\"switch m-0\">\r\n                                    <input type=\"checkbox\" checked=\"checked\" />\r\n                                    <span></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex align-items-center mb-3\">\r\n                            <div>Switch Large</div>\r\n                            <div class=\"ml-auto\">\r\n                                <label class=\"switch switch-lg m-0\">\r\n                                    <input type=\"checkbox\" checked=\"checked\" />\r\n                                    <span></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex align-items-center\">\r\n                            <div>Switch Radio</div>\r\n                            <div class=\"ml-auto d-flex\">\r\n                                <label class=\"switch switch-lg m-0 mr-2\">\r\n                                    <input type=\"radio\" checked=\"checked\" name=\"radioSwitch\" />\r\n                                    <span></span>\r\n                                </label>\r\n                                <label class=\"switch switch-lg m-0\">\r\n                                    <input type=\"radio\" name=\"radioSwitch\" />\r\n                                    <span></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row mb\">\r\n                    <label class=\"col-md-2 col-form-label\">Color pickers</label>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"card card-default\">\r\n                                    <div class=\"card-header\">Input</div>\r\n                                    <div class=\"card-body\">\r\n                                        <label for=\"\" [style.color]=\"colorDemo1\">Show me color</label>\r\n                                        <input class=\"form-control\" [(colorPicker)]=\"colorDemo1\" [value]=\"colorDemo1\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"card card-default\">\r\n                                    <div class=\"card-header\">Html element:</div>\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"h1 clickable mt-lg\" [(colorPicker)]=\"colorDemo2\" [cpPosition]=\"'bottom'\" [style.color]=\"colorDemo2\" [cpPositionOffset]=\"'50%'\" [cpPositionRelativeToArrow]=\"true\">Change me!</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"card card-default\">\r\n                                    <div class=\"card-header\">Cancel button</div>\r\n                                    <div class=\"card-body\">\r\n                                        <input class=\"form-control\" [(colorPicker)]=\"colorDemo3\" [value]=\"colorDemo3\" [cpCancelButton]=\"true\" [cpHeight]=\"'310px'\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"card card-default\">\r\n                                    <div class=\"card-header\">Output format</div>\r\n                                    <div class=\"card-body\">\r\n                                        <input class=\"form-control\" [(colorPicker)]=\"colorDemo4\" [value]=\"colorDemo4\" [cpOutputFormat]=\"'rgba'\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row mb\">\r\n                    <label class=\"col-md-2 col-form-label\">Datepicker</label>\r\n                    <div class=\"col-md-6\">\r\n                        <p>Basic</p>\r\n                        <input type=\"text\" class=\"form-control\" #dp=\"bsDatepicker\" bsDatepicker [bsValue]=\"bsValue\" name=\"dp-basic\" [bsConfig]=\"bsConfig\">\r\n                        <p class=\"mt-3\">Range</p>\r\n                        <input class=\"form-control\" #drp=\"bsDaterangepicker\" bsDaterangepicker [bsConfig]=\"bsConfig\">\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row mb\">\r\n                    <label class=\"col-md-2 col-form-label\">Timepicker</label>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 mb-3\">\r\n                                <p>Bassic</p>\r\n                                <timepicker [(ngModel)]=\"mytime\" name=\"timepicker\"></timepicker>\r\n                            </div>\r\n                            <div class=\"col-md-6 mb-3\">\r\n                                <p>Mouse wheel (focus and scroll)</p>\r\n                                <timepicker [(ngModel)]=\"mytime\" [mousewheel]=\"true\" name=\"timepicker-wheel\"></timepicker>\r\n                            </div>\r\n                        </div>\r\n                        <p>Time is: {{mytime}}</p>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <div class=\"form-group row mb\">\r\n                    <label class=\"col-md-2 col-form-label\">ngSelect2</label>\r\n                    <div class=\"col-md-6\">\r\n                        <label class=\"mt\">Single Select</label>\r\n                        <ngx-select [allowClear]=\"true\" [items]=\"items\" [disabled]=\"disabled\" (data)=\"refreshValue($event)\" (selected)=\"selected($event)\" (removed)=\"removed($event)\" (typed)=\"typed($event)\" placeholder=\"No city selected\">\r\n                        </ngx-select>\r\n                        <label class=\"mt\">Multiple</label>\r\n                        <ngx-select (data)=\"value\" [multiple]=\"true\" [items]=\"items\" [disabled]=\"disabled\" (data)=\"refreshValue($event)\" (selected)=\"selected($event)\" (removed)=\"removed($event)\" placeholder=\"No city selected\"></ngx-select>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Masked input</label>\r\n                    <div class=\"col-md-6\">\r\n                        <label class=\"mt\">\r\n                            Using\r\n                            <code>NgModel</code>\r\n                        </label>\r\n                        <input id=\"1\" name=\"phone\" [(ngModel)]=\"myModel\" [textMask]=\"{mask: mask}\" type=\"text\" class=\"form-control\" />\r\n                        <div>Model value: {{myModel || \"[empty]\"}}</div>\r\n                        <label class=\"mt\">\r\n                            Using\r\n                            <code>NgModel</code> with initial value\r\n                        </label>\r\n                        <input id=\"2\" name=\"phoneWithValue\" [(ngModel)]=\"modelWithValue\" [textMask]=\"{mask: mask}\" type=\"text\" class=\"form-control\" />\r\n                        <div>Model value: {{modelWithValue || \"[empty]\"}}</div>\r\n                        <label class=\"mt\">\r\n                            Using\r\n                            <code>FormControl</code> with initial value\r\n                        </label>\r\n                        <input id=\"3\" name=\"phoneFormControl\" [formControl]='formControlInput' [textMask]=\"{mask: mask}\" type=\"text\" class=\"form-control\" />\r\n                        <div>Model value: {{formControlInput.value || \"[empty]\"}}</div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Tags input\r\n                        <div class=\"text-sm text-muted\">Type and press Enter</div>\r\n                    </label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"mb-2\">\r\n                            <label class=\"mt\">Simple Input with two items</label>\r\n                            <tag-input theme='minimal' name=\"tagName1\" [ngModel]=\"['Typescript', 'Angular 2']\"></tag-input>\r\n                        </div>\r\n                        <div class=\"mb-2\">\r\n                            <label class=\"mt-lg\">Input tag that allows max 3 tags</label>\r\n                            <tag-input theme='minimal' name=\"tagName2\" [ngModel]=\"['Javascript', 'Typescript']\" [maxItems]=\"3\" placeholder=\"Insert a new item\"></tag-input>\r\n                        </div>\r\n                        <div class=\"mb-2\">\r\n                            <label class=\"mt-lg\">A read-only tag input</label>\r\n                            <tag-input theme='minimal' name=\"tagName3\" [ngModel]=\"['Javascript', 'Typescript']\"></tag-input>\r\n                        </div>\r\n                        <div class=\"mb-2\">\r\n                            <label class=\"mt-lg\">An input which requires all tags to start with '@' and end with '$'</label>\r\n                            <tag-input theme='minimal' name=\"tagName4\" [ngModel]=\"['@item$']\" [errorMessages]=\"errorMessages\" [validators]=\"validators\"></tag-input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Block Note Editor\r\n                        <div class=\"text-sm text-muted\">Based on textarea</div>\r\n                    </label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body mh0\">\r\n                                <textarea class=\"form-control note-editor\" rows=\"10\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <p>With margin</p>\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body mh0\">\r\n                                <textarea class=\"form-control note-editor note-editor-margin\" rows=\"10\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!-- Buttons -->\r\n            <fieldset>\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <button class=\"btn btn-secondary\" type=\"submit\">Cancel</button>\r\n                    <button class=\"btn btn-primary\" type=\"submit\">Save changes</button>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n</div>\r\n<!-- END card-->\r\n"

/***/ }),

/***/ "./ClientApp/app/routes/forms/extended/extended.component.scss":
/*!*********************************************************************!*\
  !*** ./ClientApp/app/routes/forms/extended/extended.component.scss ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__(/*! !../../../../../node_modules/css-loader!../../../../../node_modules/sass-loader/lib/loader.js!./extended.component.scss */ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/extended/extended.component.scss");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./ClientApp/app/routes/forms/extended/extended.component.ts":
/*!*******************************************************************!*\
  !*** ./ClientApp/app/routes/forms/extended/extended.component.ts ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var forms_1 = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var ExtendedComponent = /** @class */ (function () {
    function ExtendedComponent() {
        // Color Picker
        this.colorDemo1 = '#555555';
        this.colorDemo2 = '#555555';
        this.colorDemo3 = '#555555';
        this.colorDemo4 = '#555555';
        // ng2Select
        this.items = ['Amsterdam', 'Antwerp', 'Athens', 'Barcelona',
            'Berlin', 'Birmingham', 'Bradford', 'Bremen', 'Brussels', 'Bucharest',
            'Budapest', 'Cologne', 'Copenhagen', 'Dortmund', 'Dresden', 'Dublin',
            'Düsseldorf', 'Essen', 'Frankfurt', 'Genoa', 'Glasgow', 'Gothenburg',
            'Hamburg', 'Hannover', 'Helsinki', 'Kraków', 'Leeds', 'Leipzig', 'Lisbon',
            'London', 'Madrid', 'Manchester', 'Marseille', 'Milan', 'Munich', 'Málaga',
            'Naples', 'Palermo', 'Paris', 'Poznań', 'Prague', 'Riga', 'Rome',
            'Rotterdam', 'Seville', 'Sheffield', 'Sofia', 'Stockholm', 'Stuttgart',
            'The Hague', 'Turin', 'Valencia', 'Vienna', 'Vilnius', 'Warsaw', 'Wrocław',
            'Zagreb', 'Zaragoza', 'Łódź'];
        this.value = {};
        this._disabledV = '0';
        this.disabled = false;
        // Datepicker
        this.bsValue = new Date();
        this.maxDate = new Date();
        this.bsConfig = {
            containerClass: 'theme-angle'
        };
        // Time picker
        this.mytime = new Date();
        this.formControlInput = new forms_1.FormControl();
        // Tags Input
        this.validators = [this.startsWithAt, this.endsWith$];
        this.errorMessages = {
            'startsWithAt@': 'Your items need to start with "@"',
            'endsWith$': 'Your items need to end with "$"'
        };
        this.mask = ['(', /[1-9]/, /\d/, /\d/, ')', ' ', /\d/, /\d/, /\d/, '-', /\d/, /\d/, /\d/, /\d/];
        this.myModel = '';
        this.modelWithValue = '5554441234';
        this.formControlInput.setValue('5555551234');
        // Datepicker
        this.maxDate.setDate(this.maxDate.getDate() + 7);
        this.bsRangeValue = [this.bsValue, this.maxDate];
    }
    Object.defineProperty(ExtendedComponent.prototype, "disabledV", {
        get: function () {
            return this._disabledV;
        },
        set: function (value) {
            this._disabledV = value;
            this.disabled = this._disabledV === '1';
        },
        enumerable: true,
        configurable: true
    });
    ExtendedComponent.prototype.selected = function (value) {
        console.log('Selected value is: ', value);
    };
    ExtendedComponent.prototype.removed = function (value) {
        console.log('Removed value is: ', value);
    };
    ExtendedComponent.prototype.typed = function (value) {
        console.log('New search input: ', value);
    };
    ExtendedComponent.prototype.refreshValue = function (value) {
        this.value = value;
    };
    ExtendedComponent.prototype.transform = function (item) {
        return "@" + item;
    };
    ExtendedComponent.prototype.startsWithAt = function (control) {
        if (control.value.charAt(0) !== '@') {
            return {
                'startsWithAt@': true
            };
        }
        return null;
    };
    ExtendedComponent.prototype.endsWith$ = function (control) {
        if (control.value.charAt(control.value.length - 1) !== '$') {
            return {
                'endsWith$': true
            };
        }
        return null;
    };
    ExtendedComponent.prototype.ngOnInit = function () {
    };
    ExtendedComponent = __decorate([
        core_1.Component({
            selector: 'app-extended',
            template: __webpack_require__(/*! ./extended.component.html */ "./ClientApp/app/routes/forms/extended/extended.component.html"),
            styles: [__webpack_require__(/*! ./extended.component.scss */ "./ClientApp/app/routes/forms/extended/extended.component.scss")],
            encapsulation: core_1.ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [])
    ], ExtendedComponent);
    return ExtendedComponent;
}());
exports.ExtendedComponent = ExtendedComponent;


/***/ }),

/***/ "./ClientApp/app/routes/forms/forms.module.ts":
/*!****************************************************!*\
  !*** ./ClientApp/app/routes/forms/forms.module.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var router_1 = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var ngx_color_picker_1 = __webpack_require__(/*! ngx-color-picker */ "./node_modules/ngx-color-picker/dist/ngx-color-picker.es5.js");
var ngx_select_ex_1 = __webpack_require__(/*! ngx-select-ex */ "./node_modules/ngx-select-ex/esm5/ngx-select-ex.js");
var angular2_text_mask_1 = __webpack_require__(/*! angular2-text-mask */ "./node_modules/angular2-text-mask/dist/angular2TextMask.js");
var ngx_chips_1 = __webpack_require__(/*! ngx-chips */ "./node_modules/ngx-chips/esm5/ngx-chips.js");
var ng2_validation_1 = __webpack_require__(/*! ng2-validation */ "./node_modules/ng2-validation/dist/index.js");
var ng2_file_upload_1 = __webpack_require__(/*! ng2-file-upload */ "./node_modules/ng2-file-upload/index.js");
var ng2_img_cropper_1 = __webpack_require__(/*! ng2-img-cropper */ "./node_modules/ng2-img-cropper/index.js");
var shared_module_1 = __webpack_require__(/*! ../../shared/shared.module */ "./ClientApp/app/shared/shared.module.ts");
var standard_component_1 = __webpack_require__(/*! ./standard/standard.component */ "./ClientApp/app/routes/forms/standard/standard.component.ts");
var extended_component_1 = __webpack_require__(/*! ./extended/extended.component */ "./ClientApp/app/routes/forms/extended/extended.component.ts");
var validation_component_1 = __webpack_require__(/*! ./validation/validation.component */ "./ClientApp/app/routes/forms/validation/validation.component.ts");
var upload_component_1 = __webpack_require__(/*! ./upload/upload.component */ "./ClientApp/app/routes/forms/upload/upload.component.ts");
var cropper_component_1 = __webpack_require__(/*! ./cropper/cropper.component */ "./ClientApp/app/routes/forms/cropper/cropper.component.ts");
var routes = [
    { path: 'standard', component: standard_component_1.StandardComponent },
    { path: 'extended', component: extended_component_1.ExtendedComponent },
    { path: 'validation', component: validation_component_1.ValidationComponent },
    { path: 'upload', component: upload_component_1.UploadComponent },
    { path: 'cropper', component: cropper_component_1.CropperComponent }
];
var FormsModule = /** @class */ (function () {
    function FormsModule() {
    }
    FormsModule = __decorate([
        core_1.NgModule({
            imports: [
                shared_module_1.SharedModule,
                router_1.RouterModule.forChild(routes),
                ngx_select_ex_1.NgxSelectModule,
                ngx_color_picker_1.ColorPickerModule,
                angular2_text_mask_1.TextMaskModule,
                ngx_chips_1.TagInputModule,
                ng2_validation_1.CustomFormsModule,
                ng2_file_upload_1.FileUploadModule,
                ng2_img_cropper_1.ImageCropperModule
            ],
            providers: [ngx_color_picker_1.ColorPickerService],
            declarations: [
                standard_component_1.StandardComponent,
                extended_component_1.ExtendedComponent,
                validation_component_1.ValidationComponent,
                upload_component_1.UploadComponent,
                cropper_component_1.CropperComponent
            ],
            exports: [
                router_1.RouterModule
            ]
        })
    ], FormsModule);
    return FormsModule;
}());
exports.FormsModule = FormsModule;


/***/ }),

/***/ "./ClientApp/app/routes/forms/standard/standard.component.html":
/*!*********************************************************************!*\
  !*** ./ClientApp/app/routes/forms/standard/standard.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"content-heading\">\r\n    <div>Form Elements\r\n        <small>Standard and custom elements for any form</small>\r\n    </div>\r\n</div>\r\n<!-- START card-->\r\n<div class=\"card card-default\">\r\n    <div class=\"card-header\">Inline form</div>\r\n    <div class=\"card-body\">\r\n        <form class=\"form-inline\">\r\n            <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\r\n            <input class=\"form-control mb-2 mr-sm-2\" id=\"inlineFormInputName2\" type=\"text\" placeholder=\"Jane Doe\" />\r\n            <label class=\"sr-only\" for=\"inlineFormInputGroupUsername2\">Username</label>\r\n            <div class=\"input-group mb-2 mr-sm-2\">\r\n                <div class=\"input-group-prepend\">\r\n                    <div class=\"input-group-text\">@</div>\r\n                </div>\r\n                <input class=\"form-control\" id=\"inlineFormInputGroupUsername2\" type=\"text\" placeholder=\"Username\" />\r\n            </div>\r\n            <div class=\"form-check mb-2 mr-sm-2\">\r\n                <div class=\"checkbox c-checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span class=\"fa fa-check\"></span>Remember</label>\r\n                </div>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-2\" type=\"submit\">Submit</button>\r\n        </form>\r\n    </div>\r\n</div>\r\n<!-- END card-->\r\n<!-- START row-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <!-- START card-->\r\n        <div class=\"card card-default\">\r\n            <div class=\"card-header\">Stacked form</div>\r\n            <div class=\"card-body\">\r\n                <form role=\"form\">\r\n                    <div class=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input class=\"form-control\" type=\"email\" placeholder=\"Enter email\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input class=\"form-control\" type=\"password\" placeholder=\"Password\" />\r\n                    </div>\r\n                    <div class=\"checkbox c-checkbox mb-2\">\r\n                        <label>\r\n                            <input type=\"checkbox\" checked=\"\" />\r\n                            <span class=\"fa fa-times\"></span>Check me out</label>\r\n                    </div>\r\n                    <button class=\"btn btn-sm btn-secondary\" type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <!-- END card-->\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <!-- START card-->\r\n        <div class=\"card card-default\">\r\n            <div class=\"card-header\">Horizontal form</div>\r\n            <div class=\"card-body\">\r\n                <form class=\"form-horizontal\">\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-xl-2 col-form-label\">Email</label>\r\n                        <div class=\"col-xl-10\">\r\n                            <input class=\"form-control\" type=\"email\" placeholder=\"Email\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-xl-2 col-form-label\">Password</label>\r\n                        <div class=\"col-xl-10\">\r\n                            <input class=\"form-control\" type=\"password\" placeholder=\"Password\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-xl-2 col-form-label\"></label>\r\n                        <div class=\"col-xl-10\">\r\n                            <div class=\"checkbox c-checkbox\">\r\n                                <label>\r\n                                    <input type=\"checkbox\" checked=\"\" />\r\n                                    <span class=\"fa fa-check\"></span>Remember me</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-xl-2 col-form-label\"></label>\r\n                        <div class=\"col-xl-10\">\r\n                            <button class=\"btn btn-sm btn-secondary\" type=\"submit\">Sign in</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <!-- END card-->\r\n    </div>\r\n</div>\r\n<!-- END row-->\r\n<!-- START card-->\r\n<div class=\"card card-default\">\r\n    <div class=\"card-header\">Form elements</div>\r\n    <div class=\"card-body\">\r\n        <form class=\"form-horizontal\" method=\"get\" action=\"/\">\r\n            <fieldset>\r\n                <legend>Classic inputs</legend>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Rounded Corners</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input class=\"form-control form-control-rounded\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">With help</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input class=\"form-control\" type=\"text\" />\r\n                        <span class=\"form-text\">A block of help text that breaks onto a new line and may extend beyond one line.</span>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\" for=\"input-id-1\">Label focus</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input class=\"form-control\" id=\"input-id-1\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Password</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input class=\"form-control\" type=\"password\" name=\"password\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Placeholder</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input class=\"form-control\" type=\"text\" placeholder=\"placeholder\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Disabled</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Disabled input here...\" disabled=\"\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Static control</label>\r\n                    <div class=\"col-md-10\">\r\n                        <p class=\"form-control-plaintext\">email@example.com</p>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Checkboxes and radios</label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" id=\"defaultCheck1\" type=\"checkbox\" value=\"\" />\r\n                            <label class=\"form-check-label\" for=\"defaultCheck1\">Default checkbox</label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" id=\"defaultCheck2\" type=\"checkbox\" value=\"\" disabled=\"\" />\r\n                            <label class=\"form-check-label\" for=\"defaultCheck2\">Disabled checkbox</label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" id=\"exampleRadios1\" type=\"radio\" name=\"exampleRadios\" value=\"option1\" checked=\"\" />\r\n                            <label class=\"form-check-label\" for=\"exampleRadios1\">Default radio</label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" id=\"exampleRadios2\" type=\"radio\" name=\"exampleRadios\" value=\"option2\" />\r\n                            <label class=\"form-check-label\" for=\"exampleRadios2\">Second default radio</label>\r\n                        </div>\r\n                        <div class=\"form-check disabled\">\r\n                            <input class=\"form-check-input\" id=\"exampleRadios3\" type=\"radio\" name=\"exampleRadios\" value=\"option3\" disabled=\"\" />\r\n                            <label class=\"form-check-label\" for=\"exampleRadios3\">Disabled radio</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Inline checkboxes and Radios</label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" id=\"inlineCheckbox1\" type=\"checkbox\" value=\"option1\" />\r\n                            <label class=\"form-check-label\" for=\"inlineCheckbox1\">1</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" id=\"inlineCheckbox2\" type=\"checkbox\" value=\"option2\" />\r\n                            <label class=\"form-check-label\" for=\"inlineCheckbox2\">2</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" id=\"inlineCheckbox3\" type=\"checkbox\" value=\"option3\" disabled=\"\" />\r\n                            <label class=\"form-check-label\" for=\"inlineCheckbox3\">3 (disabled)</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" id=\"inlineRadio1\" type=\"radio\" name=\"inlineRadioOptions\" value=\"option1\" />\r\n                            <label class=\"form-check-label\" for=\"inlineRadio1\">1</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" id=\"inlineRadio2\" type=\"radio\" name=\"inlineRadioOptions\" value=\"option2\" />\r\n                            <label class=\"form-check-label\" for=\"inlineRadio2\">2</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" id=\"inlineRadio3\" type=\"radio\" name=\"inlineRadioOptions\" value=\"option3\" disabled=\"\" />\r\n                            <label class=\"form-check-label\" for=\"inlineRadio3\">3 (disabled)</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset class=\"last-child\">\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Select</label>\r\n                    <div class=\"col-md-10\">\r\n                        <select class=\"custom-select custom-select-lg mb-3\">\r\n                            <option selected=\"\">Open this select menu</option>\r\n                            <option value=\"1\">One</option>\r\n                            <option value=\"2\">Two</option>\r\n                            <option value=\"3\">Three</option>\r\n                        </select>\r\n                        <select class=\"custom-select custom-select-sm\">\r\n                            <option selected=\"\">Open this select menu</option>\r\n                            <option value=\"1\">One</option>\r\n                            <option value=\"2\">Two</option>\r\n                            <option value=\"3\">Three</option>\r\n                        </select>\r\n                        <div class=\"row mt-3\">\r\n                            <div class=\"col-xl-4\">\r\n                                <select class=\"custom-select\" multiple=\"\">\r\n                                    <option selected=\"\">Open this select menu</option>\r\n                                    <option value=\"1\">One</option>\r\n                                    <option value=\"2\">Two</option>\r\n                                    <option value=\"3\">Three</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Input variants</legend>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Custom Checkboxes &amp; radios</label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"checkbox c-checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" value=\"\" />\r\n                                <span class=\"fa fa-check\"></span>Option one</label>\r\n                        </div>\r\n                        <div class=\"checkbox c-checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" checked=\"\" value=\"\" />\r\n                                <span class=\"fa fa-check\"></span>Option two checked</label>\r\n                        </div>\r\n                        <div class=\"checkbox c-checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" checked=\"\" disabled=\"\" value=\"\" />\r\n                                <span class=\"fa fa-check\"></span>Option three checked and disabled</label>\r\n                        </div>\r\n                        <div class=\"checkbox c-checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" disabled=\"\" value=\"\" />\r\n                                <span class=\"fa fa-check\"></span>Option four disabled</label>\r\n                        </div>\r\n                        <div class=\"c-radio\">\r\n                            <label>\r\n                                <input type=\"radio\" name=\"a\" value=\"option1\" />\r\n                                <span class=\"fa fa-circle\"></span>Option one</label>\r\n                        </div>\r\n                        <div class=\"c-radio\">\r\n                            <label>\r\n                                <input type=\"radio\" name=\"a\" value=\"option2\" checked=\"\" />\r\n                                <span class=\"fa fa-circle\"></span>Option two checked</label>\r\n                        </div>\r\n                        <div class=\"c-radio\">\r\n                            <label>\r\n                                <input type=\"radio\" value=\"option2\" checked=\"\" disabled=\"\" />\r\n                                <span class=\"fa fa-circle\"></span>Option three checked and disabled</label>\r\n                        </div>\r\n                        <div class=\"c-radio\">\r\n                            <label>\r\n                                <input type=\"radio\" name=\"a\" disabled=\"\" />\r\n                                <span class=\"fa fa-circle\"></span>Option four disabled</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Inline checkboxes</label>\r\n                    <div class=\"col-md-10\">\r\n                        <label class=\"c-checkbox\">\r\n                            <input id=\"inlineCheckbox10\" type=\"checkbox\" value=\"option1\" />\r\n                            <span class=\"fa fa-check\"></span>a</label>\r\n                        <label class=\"c-checkbox\">\r\n                            <input id=\"inlineCheckbox20\" type=\"checkbox\" value=\"option2\" />\r\n                            <span class=\"fa fa-check\"></span>b</label>\r\n                        <label class=\"c-checkbox\">\r\n                            <input id=\"inlineCheckbox30\" type=\"checkbox\" value=\"option3\" />\r\n                            <span class=\"fa fa-check\"></span>c</label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Rounded</label>\r\n                    <div class=\"col-md-10\">\r\n                        <label class=\"checkbox c-checkbox c-checkbox-rounded\">\r\n                            <input id=\"roundedcheckbox10\" type=\"checkbox\" checked=\"checked\" />\r\n                            <span class=\"fa fa-check\"></span>Lorem</label>\r\n                        <label class=\"checkbox c-checkbox c-checkbox-rounded\">\r\n                            <input id=\"roundedcheckbox20\" type=\"checkbox\" />\r\n                            <span class=\"fa fa-check\"></span>Ipsum</label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Inline radios</label>\r\n                    <div class=\"col-md-10\">\r\n                        <label class=\"c-radio\">\r\n                            <input id=\"inlineradio1\" type=\"radio\" name=\"i-radio\" value=\"option1\" checked=\"checked\" />\r\n                            <span class=\"fa fa-circle\"></span>a</label>\r\n                        <label class=\"c-radio\">\r\n                            <input id=\"inlineradio2\" type=\"radio\" name=\"i-radio\" value=\"option2\" />\r\n                            <span class=\"fa fa-circle\"></span>b</label>\r\n                        <label class=\"c-radio\">\r\n                            <input id=\"inlineradio3\" type=\"radio\" name=\"i-radio\" value=\"option3\" />\r\n                            <span class=\"fa fa-circle\"></span>c</label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Custom icons</label>\r\n                    <div class=\"col-md-10\">\r\n                        <label class=\"c-radio\">\r\n                            <input id=\"inlineradio10\" type=\"radio\" name=\"i-radio\" value=\"option1\" checked=\"checked\" />\r\n                            <span class=\"fa fa-check\"></span>a</label>\r\n                        <label class=\"c-radio\">\r\n                            <input id=\"inlineradio20\" type=\"radio\" name=\"i-radio\" value=\"option2\" checked=\"checked\" />\r\n                            <span class=\"fa fa-user\"></span>b</label>\r\n                        <label class=\"c-radio\">\r\n                            <input id=\"inlineradio30\" type=\"radio\" name=\"i-radio\" value=\"option3\" checked=\"checked\" />\r\n                            <span class=\"fa fa-tint\"></span>c</label>\r\n                        <br/>\r\n                        <label class=\"c-checkbox\">\r\n                            <input id=\"inlinecheckbox10\" type=\"checkbox\" value=\"option1\" checked=\"checked\" />\r\n                            <span class=\"fa fa-star\"></span>a</label>\r\n                        <label class=\"c-checkbox\">\r\n                            <input id=\"inlinecheckbox20\" type=\"checkbox\" value=\"option2\" checked=\"checked\" />\r\n                            <span class=\"fa fa-heart\"></span>b</label>\r\n                        <label class=\"c-checkbox\">\r\n                            <input id=\"inlinecheckbox30\" type=\"checkbox\" value=\"option3\" checked=\"checked\" />\r\n                            <span class=\"fa fa-bell\"></span>c</label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Input validation</label>\r\n                    <div class=\"col-md-10\">\r\n                        <form>\r\n                            <div class=\"form-row\">\r\n                                <div class=\"col-lg-4 mb-3\">\r\n                                    <label for=\"validationServer01\">First name</label>\r\n                                    <input class=\"form-control is-valid\" id=\"validationServer01\" type=\"text\" placeholder=\"First name\" value=\"Mark\" required=\"\" />\r\n                                    <div class=\"valid-feedback\">Looks good!</div>\r\n                                </div>\r\n                                <div class=\"col-lg-4 mb-3\">\r\n                                    <label for=\"validationServer02\">Last name</label>\r\n                                    <input class=\"form-control is-valid\" id=\"validationServer02\" type=\"text\" placeholder=\"Last name\" value=\"Otto\" required=\"\" />\r\n                                    <div class=\"valid-feedback\">Looks good!</div>\r\n                                </div>\r\n                                <div class=\"col-lg-4 mb-3\">\r\n                                    <label for=\"validationServerUsername\">Username</label>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"inputGroupPrepend3\">@</span>\r\n                                        </div>\r\n                                        <input class=\"form-control is-invalid\" id=\"validationServerUsername\" type=\"text\" placeholder=\"Username\" aria-describedby=\"inputGroupPrepend3\" required=\"\" />\r\n                                        <div class=\"invalid-feedback\">Please choose a username.</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-row\">\r\n                                <div class=\"col-lg-6 mb-3\">\r\n                                    <label for=\"validationServer03\">City</label>\r\n                                    <input class=\"form-control is-invalid\" id=\"validationServer03\" type=\"text\" placeholder=\"City\" required=\"\" />\r\n                                    <div class=\"invalid-feedback\">Please provide a valid city.</div>\r\n                                </div>\r\n                                <div class=\"col-lg-3 mb-3\">\r\n                                    <label for=\"validationServer04\">State</label>\r\n                                    <input class=\"form-control is-invalid\" id=\"validationServer04\" type=\"text\" placeholder=\"State\" required=\"\" />\r\n                                    <div class=\"invalid-feedback\">Please provide a valid state.</div>\r\n                                </div>\r\n                                <div class=\"col-lg-3 mb-3\">\r\n                                    <label for=\"validationServer05\">Zip</label>\r\n                                    <input class=\"form-control is-invalid\" id=\"validationServer05\" type=\"text\" placeholder=\"Zip\" required=\"\" />\r\n                                    <div class=\"invalid-feedback\">Please provide a valid zip.</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group mb-2\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input is-invalid\" id=\"invalidCheck3\" type=\"checkbox\" value=\"\" required=\"\" />\r\n                                    <label class=\"form-check-label\" for=\"invalidCheck3\">Agree to terms and conditions</label>\r\n                                    <div class=\"invalid-feedback\">You must agree before submitting.</div>\r\n                                </div>\r\n                            </div>\r\n                            <button class=\"btn btn-primary\" type=\"submit\">Submit form</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Column sizing</label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-2\">\r\n                                <input class=\"form-control\" type=\"text\" placeholder=\".col-lg-2\" />\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                                <input class=\"form-control\" type=\"text\" placeholder=\".col-lg-3\" />\r\n                            </div>\r\n                            <div class=\"col-lg-4\">\r\n                                <input class=\"form-control\" type=\"text\" placeholder=\".col-lg-4\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Input groups</label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\r\n                            </div>\r\n                            <input class=\"form-control\" type=\"text\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                        </div>\r\n                        <div class=\"input-group mb-3\">\r\n                            <input class=\"form-control\" type=\"text\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\r\n                            </div>\r\n                        </div>\r\n                        <label for=\"basic-url\">Your vanity URL</label>\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\r\n                            </div>\r\n                            <input class=\"form-control\" id=\"basic-url\" type=\"text\" aria-describedby=\"basic-addon3\" />\r\n                        </div>\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\">$</span>\r\n                            </div>\r\n                            <input class=\"form-control\" type=\"text\" aria-label=\"Amount (to the nearest dollar)\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text\">.00</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"input-group\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\">With textarea</span>\r\n                            </div>\r\n                            <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Button addons</label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <button class=\"btn btn-outline-secondary\" type=\"button\">Button</button>\r\n                            </div>\r\n                            <input class=\"form-control\" type=\"text\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\r\n                        </div>\r\n                        <div class=\"input-group mb-3\">\r\n                            <input class=\"form-control\" type=\"text\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                            <div class=\"input-group-append\">\r\n                                <button class=\"btn btn-outline-secondary\" type=\"button\">Button</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">With dropdowns</label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <div class=\"btn-group\" dropdown>\r\n                                    <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" dropdownToggle aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</button>\r\n                                    <div *dropdownMenu class=\"dropdown-menu\">\r\n                                        <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                        <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Separated link</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input class=\"form-control\" type=\"text\" aria-label=\"Text input with dropdown button\" />\r\n                        </div>\r\n                        <div class=\"input-group\">\r\n                            <input class=\"form-control\" type=\"text\" aria-label=\"Text input with dropdown button\" />\r\n                            <div class=\"input-group-append\" >\r\n                                <div class=\"btn-group\" dropdown>\r\n                                    <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" dropdownToggle aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</button>\r\n                                    <div *dropdownMenu class=\"dropdown-menu dropdown-menu-right-forced\">\r\n                                        <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                        <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Separated link</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\">Segmented</label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <div class=\"btn-group\" dropdown>\r\n                                    <button class=\"btn btn-outline-secondary\" type=\"button\">Action</button>\r\n                                    <button class=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" type=\"button\" dropdownToggle aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <span class=\"sr-only\">Toggle Dropdown</span>\r\n                                    </button>\r\n                                    <div *dropdownMenu class=\"dropdown-menu\">\r\n                                        <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                        <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Separated link</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input class=\"form-control\" type=\"text\" aria-label=\"Text input with segmented dropdown button\" />\r\n                        </div>\r\n                        <div class=\"input-group\">\r\n                            <input class=\"form-control\" type=\"text\" aria-label=\"Text input with segmented dropdown button\" />\r\n                            <div class=\"input-group-append\">\r\n                                <div class=\"btn-group\" dropdown>\r\n                                    <button class=\"btn btn-outline-secondary\" type=\"button\">Action</button>\r\n                                    <button class=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" type=\"button\" dropdownToggle aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <span class=\"sr-only\">Toggle Dropdown</span>\r\n                                    </button>\r\n                                    <div *dropdownMenu class=\"dropdown-menu dropdown-menu-right-forced\">\r\n                                        <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                        <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                                        <a class=\"dropdown-item\" href=\"#\">Separated link</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n</div>\r\n<!-- END card-->\r\n"

/***/ }),

/***/ "./ClientApp/app/routes/forms/standard/standard.component.scss":
/*!*********************************************************************!*\
  !*** ./ClientApp/app/routes/forms/standard/standard.component.scss ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__(/*! !../../../../../node_modules/css-loader!../../../../../node_modules/sass-loader/lib/loader.js!./standard.component.scss */ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/standard/standard.component.scss");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./ClientApp/app/routes/forms/standard/standard.component.ts":
/*!*******************************************************************!*\
  !*** ./ClientApp/app/routes/forms/standard/standard.component.ts ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var StandardComponent = /** @class */ (function () {
    function StandardComponent() {
    }
    StandardComponent.prototype.ngOnInit = function () {
    };
    StandardComponent = __decorate([
        core_1.Component({
            selector: 'app-standard',
            template: __webpack_require__(/*! ./standard.component.html */ "./ClientApp/app/routes/forms/standard/standard.component.html"),
            styles: [__webpack_require__(/*! ./standard.component.scss */ "./ClientApp/app/routes/forms/standard/standard.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], StandardComponent);
    return StandardComponent;
}());
exports.StandardComponent = StandardComponent;


/***/ }),

/***/ "./ClientApp/app/routes/forms/upload/upload.component.html":
/*!*****************************************************************!*\
  !*** ./ClientApp/app/routes/forms/upload/upload.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"content-heading\">File Upload</div>\r\n<div class=\"row\">\r\n    <div class=\"col-lg-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"page-header mt0\">Select files</h4>\r\n                <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\" [uploader]=\"uploader\" class=\"box-placeholder my-drop-zone\">\r\n                    Base drop zone\r\n                </div>\r\n                <div ng2FileDrop [ngClass]=\"{'another-file-over-class': hasAnotherDropZoneOver}\" (fileOver)=\"fileOverAnother($event)\" [uploader]=\"uploader\" class=\"box-placeholder my-drop-zone\">\r\n                    Another drop zone\r\n                </div>\r\n                <p class=\"text-bold\">Upload options</p>\r\n                <label for=\"file1\" class=\"file-upload\">\r\n                    <button class=\"btn btn-secondary btn-block\">Multiple</button>\r\n                    <input id=\"file1\" type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple />\r\n                </label>\r\n                <label for=\"file2\" class=\"file-upload\">\r\n                    <button class=\"btn btn-secondary btn-block\">Single</button>\r\n                    <input id=\"file2\" type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-lg-9\" style=\"margin-bottom: 40px\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"float-right badge badge-info\" *ngIf=\"uploader?.queue?.length\">Queue length: {{ uploader?.queue?.length }}</p>\r\n                <h4 class=\"page-header mt0\">Upload queue</h4>\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th width=\"50%\">Name</th>\r\n                            <th>Size</th>\r\n                            <th>Progress</th>\r\n                            <th>Status</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of uploader.queue\">\r\n                            <td><strong>{{ item?.file?.name }}</strong></td>\r\n                            <td *ngIf=\"uploader.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n                            <td *ngIf=\"uploader.isHTML5\">\r\n                                <div class=\"progress\" style=\"margin-bottom: 0;\">\r\n                                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                                <span *ngIf=\"item.isSuccess\"><i class=\"fa fa-ok\"></i></span>\r\n                                <span *ngIf=\"item.isCancel\"><i class=\"icon-close mr\"></i></span>\r\n                                <span *ngIf=\"item.isError\"><i class=\"fas fa-times\"></i></span>\r\n                            </td>\r\n                            <td nowrap>\r\n                                <button type=\"button\" class=\"btn btn-info btn-xs\" (click)=\"item.upload()\" [disabled]=\"item.isReady || item.isUploading || item.isSuccess\">\r\n                                    <span class=\"fa icon-cloud-upload mr\"></span> Upload\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-warning btn-xs\" (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\">\r\n                                    <span class=\"icon-close mr\"></span> Cancel\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-danger btn-xs\" (click)=\"item.remove()\">\r\n                                    <span class=\"icon-trash mr\"></span> Remove\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <div>\r\n                        Queue progress:\r\n                        <div class=\"progress\" style=\"\">\r\n                            <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" class=\"btn btn-info btn-s\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n                        <span class=\"fa icon-cloud-upload mr\"></span> Upload all\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n                        <span class=\"icon-close mr\"></span> Cancel all\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n                        <span class=\"icon-trash mr\"></span> Remove all\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p><small>See implementation details <a href=\"http://valor-software.com/ng2-file-upload/\">here</a></small></p>\r\n"

/***/ }),

/***/ "./ClientApp/app/routes/forms/upload/upload.component.scss":
/*!*****************************************************************!*\
  !*** ./ClientApp/app/routes/forms/upload/upload.component.scss ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__(/*! !../../../../../node_modules/css-loader!../../../../../node_modules/sass-loader/lib/loader.js!./upload.component.scss */ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/upload/upload.component.scss");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./ClientApp/app/routes/forms/upload/upload.component.ts":
/*!***************************************************************!*\
  !*** ./ClientApp/app/routes/forms/upload/upload.component.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var ng2_file_upload_1 = __webpack_require__(/*! ng2-file-upload */ "./node_modules/ng2-file-upload/index.js");
var URL = 'https://evening-anchorage-3159.herokuapp.com/api/';
var UploadComponent = /** @class */ (function () {
    function UploadComponent() {
        this.uploader = new ng2_file_upload_1.FileUploader({ url: URL });
        this.hasBaseDropZoneOver = false;
        this.hasAnotherDropZoneOver = false;
    }
    UploadComponent.prototype.fileOverBase = function (e) {
        this.hasBaseDropZoneOver = e;
    };
    UploadComponent.prototype.fileOverAnother = function (e) {
        this.hasAnotherDropZoneOver = e;
    };
    UploadComponent.prototype.ngOnInit = function () {
    };
    UploadComponent = __decorate([
        core_1.Component({
            selector: 'app-upload',
            template: __webpack_require__(/*! ./upload.component.html */ "./ClientApp/app/routes/forms/upload/upload.component.html"),
            styles: [__webpack_require__(/*! ./upload.component.scss */ "./ClientApp/app/routes/forms/upload/upload.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], UploadComponent);
    return UploadComponent;
}());
exports.UploadComponent = UploadComponent;


/***/ }),

/***/ "./ClientApp/app/routes/forms/validation/validation.component.html":
/*!*************************************************************************!*\
  !*** ./ClientApp/app/routes/forms/validation/validation.component.html ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"content-heading\">\r\n    <div>Form Validation\r\n        <small>Native Angular input validation</small></div>\r\n</div>\r\n<!-- START row-->\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <form [formGroup]=\"valForm\" class=\"form-validate form-horizontal\" (submit)=\"submitForm($event, valForm.value)\" novalidate=\"\">\r\n                <!-- START card-->\r\n                <div class=\"card card-default\">\r\n                    <div class=\"card-body\">\r\n                        <fieldset class=\"b0\">\r\n                            <legend>Built-in</legend>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Required Text</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"sometext\" [formControl]=\"valForm.controls['sometext']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['sometext'].hasError('required') && (valForm.controls['sometext'].dirty || valForm.controls['sometext'].touched)\">This field is required</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">required</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Checkbox &amp; Radio</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <div class=\"checkbox c-checkbox\">\r\n                                        <label>\r\n                                            <input type=\"checkbox\" formControlName=\"checkbox\" [formControl]=\"valForm.controls['checkbox']\" />\r\n                                            <span class=\"fa fa-check\"></span>Option one</label>\r\n                                    </div>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['checkbox'].hasError('required') && (valForm.controls['checkbox'].dirty || valForm.controls['checkbox'].touched)\">This field is required</span>\r\n                                    <div class=\"c-radio\">\r\n                                        <label>\r\n                                            <input type=\"radio\" formControlName=\"radio\" value=\"option1\" [formControl]=\"valForm.controls['radio']\" />\r\n                                            <span class=\"fa fa-circle\"></span>Option one</label>\r\n                                    </div>\r\n                                    <div class=\"c-radio\">\r\n                                        <label>\r\n                                            <input type=\"radio\" formControlName=\"radio\" value=\"option2\" [formControl]=\"valForm.controls['radio']\" />\r\n                                            <span class=\"fa fa-circle\"></span>Option two</label>\r\n                                    </div>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['radio'].hasError('required') && (valForm.controls['radio'].dirty || valForm.controls['radio'].touched)\">This field is required</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\"></div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Select</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <select class=\"form-control\" formControlName=\"select\" [formControl]=\"valForm.controls['select']\">\r\n                                        <option value=\"\">Nothing</option>\r\n                                        <option value=\"1\">Option 1</option>\r\n                                        <option value=\"2\">Option 2</option>\r\n                                        <option value=\"3\">Option 3</option>\r\n                                        <option value=\"4\">Option 4</option>\r\n                                    </select>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['select'].hasError('required') && (valForm.controls['select'].dirty || valForm.controls['select'].touched)\">This field is required</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\"></small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Digits</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"digits\" [formControl]=\"valForm.controls['digits']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['digits'].hasError('pattern') && (valForm.controls['digits'].dirty || valForm.controls['digits'].touched)\">This field must contain only digits</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">pattern=\"/^[0-9]+$/\"</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Minlength</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"minlen\" [formControl]=\"valForm.controls['minlen']\"/>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['minlen'].hasError('minlength') && (valForm.controls['minlen'].dirty || valForm.controls['minlen'].touched)\">This field requires a min length</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">minlength 6</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Maxlength</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"maxlen\" [formControl]=\"valForm.controls['maxlen']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['maxlen'].hasError('maxlength') && (valForm.controls['maxlen'].dirty || valForm.controls['maxlen'].touched)\">This field requires a max length</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">maxlength 10</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset class=\"b0\">\r\n                            <legend>Extended</legend>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Number</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <!-- using type=\"number\" triggers 'required' when input is invalid -->\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"number\" [formControl]=\"valForm.controls['number']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['number'].hasError('required') && (valForm.controls['number'].dirty || valForm.controls['number'].touched)\">This field is required</span>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['number'].hasError('number') && (valForm.controls['number'].dirty || valForm.controls['number'].touched)\">This field must be a valid number</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">type='number'</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Alphanum</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"alphanum\" [formControl]=\"valForm.controls['alphanum']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['alphanum'].hasError('pattern') && (valForm.controls['alphanum'].dirty || valForm.controls['alphanum'].touched)\">This field must contain only letters or numbers</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">pattern=\"/^[a-zA-Z0-9]+$/\"</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Email</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"email\" placeholder=\"mail@example.com\" formControlName=\"email\" [formControl]=\"valForm.controls['email']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['email'].hasError('email') && (valForm.controls['email'].dirty || valForm.controls['email'].touched)\">Enter a valid email</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">type='email'</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Url</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"url\" placeholder=\"http://\" formControlName=\"url\" [formControl]=\"valForm.controls['url']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['url'].hasError('url') && (valForm.controls['url'].dirty || valForm.controls['url'].touched)\">Enter a valid url</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">type='url'</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Date</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"date\" formControlName=\"date\" [formControl]=\"valForm.controls['date']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['date'].hasError('date') && (valForm.controls['date'].dirty || valForm.controls['date'].touched)\">Enter a valid date</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">type='date'</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Min</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"minvalue\" [formControl]=\"valForm.controls['minvalue']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['minvalue'].hasError('min') && (valForm.controls['minvalue'].dirty || valForm.controls['minvalue'].touched)\">This field requires minimum value</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">min value 6</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Max</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"maxvalue\" [formControl]=\"valForm.controls['maxvalue']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['maxvalue'].hasError('max') && (valForm.controls['maxvalue'].dirty || valForm.controls['maxvalue'].touched)\">This field requires maximum value</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">max value 10\"</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Length range</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"minmaxlen\" [formControl]=\"valForm.controls['minmaxlen']\"/>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['minmaxlen'].hasError('rangeLength') && (valForm.controls['minmaxlen'].dirty || valForm.controls['minmaxlen'].touched)\">This field requires a range</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">length range between 6 and 10</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Value range</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"range\" [formControl]=\"valForm.controls['range']\"/>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['range'].hasError('range') && (valForm.controls['range'].dirty || valForm.controls['range'].touched)\">This field requires a value range</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">value range between 10 and 20</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset class=\"b0\">\r\n                            <legend>Custom</legend>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Min words</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"minwords\" [formControl]=\"valForm.controls['minwords']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['minwords'].hasError('minWords') && (valForm.controls['minwords'].dirty || valForm.controls['minwords'].touched)\">This field requires a minimum amount of words</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">words >= 6</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset class=\"bb0\">\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Max words</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"maxwords\" [formControl]=\"valForm.controls['maxwords']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['maxwords'].hasError('maxWords') && (valForm.controls['maxwords'].dirty || valForm.controls['maxwords'].touched)\">This field requires a maximum amount of words</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">words <= 6</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset class=\"bb0\">\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Range of words</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"text\" formControlName=\"rangewords\" [formControl]=\"valForm.controls['rangewords']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['rangewords'].hasError('minWords') && (valForm.controls['rangewords'].dirty || valForm.controls['rangewords'].touched)\">This field requires a minimum amount of words</span>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['rangewords'].hasError('maxWords') && (valForm.controls['rangewords'].dirty || valForm.controls['rangewords'].touched)\">This field requires a maximum amount of words</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">words range between 6 and 10</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Email BlackList</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <input class=\"form-control\" type=\"email\" placeholder=\"example: 'bad@email.com'\" formControlName=\"email_bl\" [formControl]=\"valForm.controls['email_bl']\" />\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.controls['email_bl'].hasError('blacklist') && (valForm.controls['email_bl'].dirty || valForm.controls['email_bl'].touched)\">Email found in black list</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">BlackList: <br>{{ blackList }}</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset class=\"b0\">\r\n                            <legend>Comparison</legend>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div class=\"form-group row\" formGroupName=\"passwordGroup\">\r\n                                <label class=\"col-lg-2 col-form-label text-lg-right\">Equal to</label>\r\n                                <div class=\"col-lg-6\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-6\">\r\n                                            <input class=\"form-control\" type=\"password\" formControlName=\"password\" [formControl]=\"valForm.get('passwordGroup.password')\" />\r\n                                        </div>\r\n                                        <div class=\"col-6\">\r\n                                            <input class=\"form-control\" type=\"password\" formControlName=\"confirmPassword\" [formControl]=\"valForm.get('passwordGroup.confirmPassword')\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.get('passwordGroup.password').hasError('required') && (valForm.get('passwordGroup.password').dirty || valForm.get('passwordGroup.password').touched)\">Input required</span>\r\n                                    <span class=\"text-danger\" *ngIf=\"valForm.get('passwordGroup.confirmPassword').hasError('equalTo')\">Input does Not match</span>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                    <small class=\"text-muted\">Value match</small>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n\r\n                    </div>\r\n                    <div class=\"card-footer text-center\">\r\n                        <button class=\"btn btn-info\" type=\"submit\">Run validation</button>\r\n                    </div>\r\n                </div>\r\n                <!-- END card-->\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <!-- END row-->\r\n\r\n</div>\r\n"

/***/ }),

/***/ "./ClientApp/app/routes/forms/validation/validation.component.scss":
/*!*************************************************************************!*\
  !*** ./ClientApp/app/routes/forms/validation/validation.component.scss ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__(/*! !../../../../../node_modules/css-loader!../../../../../node_modules/sass-loader/lib/loader.js!./validation.component.scss */ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/validation/validation.component.scss");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./ClientApp/app/routes/forms/validation/validation.component.ts":
/*!***********************************************************************!*\
  !*** ./ClientApp/app/routes/forms/validation/validation.component.ts ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var forms_1 = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var ng2_validation_1 = __webpack_require__(/*! ng2-validation */ "./node_modules/ng2-validation/dist/index.js");
var ValidationComponent = /** @class */ (function () {
    function ValidationComponent(fb) {
        this.blackList = ['bad@email.com', 'some@mail.com', 'wrong@email.co'];
        var password = new forms_1.FormControl('', forms_1.Validators.required);
        var certainPassword = new forms_1.FormControl('', ng2_validation_1.CustomValidators.equalTo(password));
        // Model Driven validation
        this.valForm = fb.group({
            'sometext': [null, forms_1.Validators.required],
            'checkbox': [null, forms_1.Validators.required],
            'radio': ['', forms_1.Validators.required],
            'select': [null, forms_1.Validators.required],
            'digits': [null, forms_1.Validators.pattern('^[0-9]+$')],
            'minlen': [null, forms_1.Validators.minLength(6)],
            'maxlen': [null, forms_1.Validators.maxLength(10)],
            'email': [null, ng2_validation_1.CustomValidators.email],
            'url': [null, ng2_validation_1.CustomValidators.url],
            'date': [null, ng2_validation_1.CustomValidators.date],
            'number': [null, forms_1.Validators.compose([forms_1.Validators.required, ng2_validation_1.CustomValidators.number])],
            'alphanum': [null, forms_1.Validators.pattern('^[a-zA-Z0-9]+$')],
            'minvalue': [null, ng2_validation_1.CustomValidators.min(6)],
            'maxvalue': [null, ng2_validation_1.CustomValidators.max(10)],
            'minwords': [null, this.minWords(6)],
            'maxwords': [null, this.maxWords(10)],
            'minmaxlen': [null, ng2_validation_1.CustomValidators.rangeLength([6, 10])],
            'range': [null, ng2_validation_1.CustomValidators.range([10, 20])],
            'rangewords': [null, forms_1.Validators.compose([this.minWords(6), this.maxWords(10)])],
            'email_bl': [null, this.checkBlackList(this.blackList)],
            'passwordGroup': fb.group({
                password: password,
                confirmPassword: certainPassword
            })
        });
    }
    ValidationComponent.prototype.submitForm = function ($ev, value) {
        $ev.preventDefault();
        for (var c in this.valForm.controls) {
            this.valForm.controls[c].markAsTouched();
        }
        if (this.valForm.valid) {
            console.log('Valid!');
        }
        console.log(value);
    };
    ValidationComponent.prototype.minWords = function (checkValue) {
        return (function (control) {
            return (control.value || '').split(' ').length >= checkValue ? null : { 'minWords': control.value };
        });
    };
    ValidationComponent.prototype.maxWords = function (checkValue) {
        return (function (control) {
            return (control.value || '').split(' ').length <= checkValue ? null : { 'maxWords': control.value };
        });
    };
    ValidationComponent.prototype.checkBlackList = function (list) {
        return (function (control) {
            return list.indexOf(control.value) < 0 ? null : { 'blacklist': control.value };
        });
    };
    ValidationComponent.prototype.ngOnInit = function () {
    };
    ValidationComponent = __decorate([
        core_1.Component({
            selector: 'app-validation',
            template: __webpack_require__(/*! ./validation.component.html */ "./ClientApp/app/routes/forms/validation/validation.component.html"),
            styles: [__webpack_require__(/*! ./validation.component.scss */ "./ClientApp/app/routes/forms/validation/validation.component.scss")]
        }),
        __metadata("design:paramtypes", [forms_1.FormBuilder])
    ], ValidationComponent);
    return ValidationComponent;
}());
exports.ValidationComponent = ValidationComponent;


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/cropper/cropper.component.scss":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/cropper/cropper.component.scss ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".image-cropper-container {\n  max-width: 790px; }\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/extended/extended.component.scss":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/extended/extended.component.scss ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports
exports.i(__webpack_require__(/*! -!../../../../../node_modules/css-loader!ngx-bootstrap/datepicker/bs-datepicker.css */ "./node_modules/css-loader/index.js!./node_modules/ngx-bootstrap/datepicker/bs-datepicker.css"), "");

// module
exports.push([module.i, "/* Fix header text placement */\n.bs-datepicker-head > bs-datepicker-navigation-view {\n  display: flex;\n  justify-content: space-around; }\n\n/* Custom Theme */\n.theme-angle .bs-datepicker-head {\n  background-color: #23b7e5; }\n\n.theme-angle .bs-datepicker-body table td span.selected, .theme-angle .bs-datepicker-body table td.selected span,\n.theme-angle .bs-datepicker-body table td span[class*=\"select-\"]:after,\n.theme-angle .bs-datepicker-body table td[class*=\"select-\"] span:after {\n  background-color: #23b7e5; }\n\n.theme-angle .bs-datepicker-body table td.week span {\n  color: #23b7e5; }\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/standard/standard.component.scss":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/standard/standard.component.scss ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/upload/upload.component.scss":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/upload/upload.component.scss ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/validation/validation.component.scss":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/routes/forms/validation/validation.component.scss ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,