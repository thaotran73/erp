{
  "version": 3,
  "file": "ngx-select-ex.js",
  "sources": [
    "ng://ngx-select-ex/out/ngx-select/ngx-select.module.ts",
    "ng://ngx-select-ex/out/ngx-select/ngx-select.component.ts",
    "ng://ngx-select-ex/out/ngx-select/ngx-templates.directive.ts",
    "ng://ngx-select-ex/out/ngx-select/ngx-select.classes.ts"
  ],
  "sourcesContent": [
    "import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NGX_SELECT_OPTIONS, NgxSelectComponent} from './ngx-select.component';\nimport {NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective} from './ngx-templates.directive';\nimport {INgxSelectOptions} from './ngx-select.interfaces';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ],\n    exports: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ]\n})\nexport class NgxSelectModule {\n    static forRoot(options: INgxSelectOptions): ModuleWithProviders {\n        return {\n            ngModule: NgxSelectModule,\n            providers: [{provide: NGX_SELECT_OPTIONS, useValue: options}]\n        };\n    }\n}\n",
    "import {\n    AfterContentChecked, DoCheck, Input, Output, ViewChild,\n    Component, ElementRef, EventEmitter, forwardRef, HostListener, IterableDiffer, IterableDiffers, ChangeDetectorRef, ContentChild,\n    TemplateRef, Optional, Inject, InjectionToken\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/combineLatest';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport * as lodashNs from 'lodash';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {NgxSelectOptGroup, NgxSelectOption, TSelectOption} from './ngx-select.classes';\nimport {NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective} from './ngx-templates.directive';\nimport {INgxOptionNavigated, INgxSelectOption, INgxSelectOptions} from './ngx-select.interfaces';\n\nconst _ = lodashNs;\nconst escapeString = escapeStringNs;\n\nexport const NGX_SELECT_OPTIONS = new InjectionToken<any>('NGX_SELECT_OPTIONS');\n\nexport interface INgxSelectComponentMouseEvent extends MouseEvent {\n    clickedSelectComponent?: NgxSelectComponent;\n}\n\nenum ENavigation {\n    first, previous, next, last,\n    firstSelected, firstIfOptionActiveInvisible\n}\n\nfunction propertyExists(obj: Object, propertyName: string) {\n    return propertyName in obj;\n}\n\n@Component({\n    selector: 'ngx-select',\n    template: `<div #main [tabindex]=\"disabled? -1: 0\" class=\"ngx-select dropdown\"\n     [ngClass]=\"setFormControlSize({\n        'ngx-select_multiple form-control': multiple === true,\n        'open show': optionsOpened && optionsFiltered.length\n     }, multiple === true)\"\n     (click)=\"mainClicked($event)\" (focusin)=\"mainClicked($event)\"\n     (focus)=\"focusToInput()\" (keydown)=\"inputKeyDown($event)\"\n     (keyup)=\"mainKeyUp($event)\">\n    <div [ngClass]=\"{ 'ngx-select__disabled': disabled}\"></div>\n\n    <!-- single selected item -->\n    <div class=\"ngx-select__selected\"\n         *ngIf=\"(multiple === false) && (!optionsOpened || noAutoComplete)\">\n        <div class=\"ngx-select__toggle btn form-control\" [ngClass]=\"setFormControlSize(setBtnSize())\"\n             (click)=\"optionsOpen()\">\n\n            <span *ngIf=\"!optionsSelected.length\" class=\"ngx-select__placeholder text-muted\">\n                <span [innerHtml]=\"placeholder\"></span>\n            </span>\n            <span *ngIf=\"optionsSelected.length\"\n                  class=\"ngx-select__selected-single pull-left float-left\"\n                  [ngClass]=\"{'ngx-select__allow-clear': allowClear}\">\n                <ng-container [ngTemplateOutlet]=\"templateSelectedOption || defaultTemplateOption\"\n                              [ngTemplateOutletContext]=\"{$implicit: optionsSelected[0], index: 0,\n                                                          text: sanitize(optionsSelected[0].text)}\">\n                </ng-container>\n            </span>\n            <span class=\"ngx-select__toggle-buttons\">\n                <a class=\"ngx-select__clear btn btn-sm btn-link\" *ngIf=\"canClearNotMultiple()\"\n                   [ngClass]=\"setBtnSize()\"\n                   (click)=\"optionRemove(optionsSelected[0], $event)\">\n                    <i class=\"ngx-select__clear-icon\"></i>\n                </a>\n                <i class=\"dropdown-toggle\"></i>\n                <i class=\"ngx-select__toggle-caret caret\"></i>\n            </span>\n        </div>\n    </div>\n\n    <!-- multiple selected items -->\n    <div class=\"ngx-select__selected\" *ngIf=\"multiple === true\">\n        <span *ngFor=\"let option of optionsSelected; trackBy: trackByOption; let idx = index\">\n            <span tabindex=\"-1\" [ngClass]=\"setBtnSize()\"\n                  class=\"ngx-select__selected-plural btn btn-default btn-secondary btn-xs\">\n\n                <ng-container [ngTemplateOutlet]=\"templateSelectedOption || defaultTemplateOption\"\n                              [ngTemplateOutletContext]=\"{$implicit: option, index: idx, text: sanitize(option.text)}\">\n                </ng-container>\n\n                <a class=\"ngx-select__clear btn btn-sm btn-link pull-right float-right\" [ngClass]=\"setBtnSize()\"\n                   (click)=\"optionRemove(option, $event)\">\n                    <i class=\"ngx-select__clear-icon\"></i>\n                </a>\n            </span>\n        </span>\n    </div>\n\n    <!-- live search an item from the list -->\n    <input #input type=\"text\" class=\"ngx-select__search form-control\" [ngClass]=\"setFormControlSize()\"\n           *ngIf=\"checkInputVisibility()\"\n           [tabindex]=\"multiple === false? -1: 0\"\n           (keydown)=\"inputKeyDown($event)\"\n           (keyup)=\"inputKeyUp(input.value)\"\n           (input)=\"doInputText(input.value)\"\n           [disabled]=\"disabled\"\n           [placeholder]=\"optionsSelected.length? '': placeholder\"\n           (click)=\"inputClick(input.value)\"\n           autocomplete=\"off\"\n           autocorrect=\"off\"\n           autocapitalize=\"off\"\n           spellcheck=\"false\"\n           role=\"combobox\">\n\n    <!-- options template -->\n    <ul #choiceMenu role=\"menu\" *ngIf=\"isFocused\" class=\"ngx-select__choices dropdown-menu\"\n        [class.show]=\"optionsOpened\">\n        <li class=\"ngx-select__item-group\" role=\"menuitem\"\n            *ngFor=\"let opt of optionsFiltered; trackBy: trackByOption; let idxGroup=index\">\n            <div class=\"divider dropdown-divider\" *ngIf=\"opt.type === 'optgroup' && (idxGroup > 0)\"></div>\n            <div class=\"dropdown-header\" *ngIf=\"opt.type === 'optgroup'\">{{opt.label}}</div>\n\n            <a href=\"#\" #choiceItem class=\"ngx-select__item dropdown-item\"\n               *ngFor=\"let option of (opt.optionsFiltered || [opt]); trackBy: trackByOption; let idxOption = index\"\n               [ngClass]=\"{\n                    'ngx-select__item_active active': isOptionActive(option, choiceItem),\n                    'ngx-select__item_disabled disabled': option.disabled\n               }\"\n               (mouseenter)=\"optionActivate({\n                    activeOption: option,\n                    filteredOptionList: optionsFiltered,\n                    index: optionsFiltered.indexOf(option)\n               })\"\n               (click)=\"optionSelect(option, $event)\">\n                <ng-container [ngTemplateOutlet]=\"templateOption || defaultTemplateOption\"\n                              [ngTemplateOutletContext]=\"{$implicit: option, text: highlightOption(option),\n                              index: idxGroup, subIndex: idxOption}\"></ng-container>\n            </a>\n        </li>\n        <li class=\"ngx-select__item ngx-select__item_no-found dropdown-header\" *ngIf=\"!optionsFiltered.length\">\n            <ng-container [ngTemplateOutlet]=\"templateOptionNotFound || defaultTemplateOptionNotFound\"></ng-container>\n        </li>\n    </ul>\n\n    <!--Default templates-->\n    <ng-template #defaultTemplateOption let-text=\"text\">\n        <span [innerHtml]=\"text\"></span>\n    </ng-template>\n\n    <ng-template #defaultTemplateOptionNotFound>\n        {{noResultsFound}}\n    </ng-template>\n\n</div>`,\n    styles: [`.ngx-select{ }\n  .ngx-select_multiple{\n    height:auto;\n    padding:3px 3px 0 3px; }\n  .ngx-select_multiple .ngx-select__search{\n    background-color:transparent !important;\n    border:none;\n    outline:none;\n    -webkit-box-shadow:none;\n            box-shadow:none;\n    height:1.6666em;\n    padding:0;\n    margin-bottom:3px; }\n  .ngx-select__disabled{\n    background-color:#eceeef;\n    border-radius:4px;\n    position:absolute;\n    width:100%;\n    height:100%;\n    z-index:5;\n    opacity:0.6;\n    top:0;\n    left:0;\n    cursor:not-allowed; }\n  .ngx-select__toggle{\n    outline:0;\n    position:relative;\n    text-align:left !important;\n    color:#333;\n    background-color:#fff;\n    border-color:#ccc;\n    display:-webkit-inline-box;\n    display:-ms-inline-flexbox;\n    display:inline-flex;\n    -webkit-box-align:stretch;\n        -ms-flex-align:stretch;\n            align-items:stretch;\n    -webkit-box-pack:justify;\n        -ms-flex-pack:justify;\n            justify-content:space-between; }\n    .ngx-select__toggle:hover{\n      color:#333;\n      background-color:#e6e6e6;\n      border-color:#adadad; }\n  .ngx-select__toggle-buttons{\n    -ms-flex-negative:0;\n        flex-shrink:0;\n    display:-webkit-box;\n    display:-ms-flexbox;\n    display:flex;\n    -webkit-box-align:center;\n        -ms-flex-align:center;\n            align-items:center; }\n  .ngx-select__toggle-caret{\n    position:absolute;\n    height:10px;\n    top:50%;\n    right:10px;\n    margin-top:-2px; }\n  .ngx-select__placeholder{\n    float:left; }\n  .ngx-select__clear{\n    margin-right:10px;\n    padding:0;\n    border:none; }\n  .ngx-select_multiple .ngx-select__clear{\n    line-height:initial;\n    margin-left:5px;\n    margin-right:0;\n    color:#000;\n    opacity:.5; }\n  .ngx-select__clear-icon{\n    display:inline-block;\n    font-size:inherit;\n    cursor:pointer;\n    position:relative;\n    width:1em;\n    height:.75em;\n    padding:0; }\n    .ngx-select__clear-icon:before, .ngx-select__clear-icon:after{\n      content:'';\n      position:absolute;\n      border-top:3px solid;\n      width:100%;\n      top:50%;\n      left:0;\n      margin-top:-1px; }\n    .ngx-select__clear-icon:before{\n      -webkit-transform:rotate(45deg);\n              transform:rotate(45deg); }\n    .ngx-select__clear-icon:after{\n      -webkit-transform:rotate(-45deg);\n              transform:rotate(-45deg); }\n  .ngx-select__choices{\n    width:100%;\n    height:auto;\n    max-height:200px;\n    overflow-x:hidden;\n    margin-top:0;\n    position:absolute; }\n  .ngx-select_multiple .ngx-select__choices{\n    margin-top:1px; }\n  .ngx-select__item{\n    display:block;\n    padding:3px 20px;\n    clear:both;\n    font-weight:400;\n    line-height:1.42857143;\n    white-space:nowrap;\n    cursor:pointer;\n    text-decoration:none; }\n  .ngx-select__item_disabled, .ngx-select__item_no-found{\n    cursor:default; }\n  .ngx-select__item_active{\n    color:#fff;\n    outline:0;\n    background-color:#428bca; }\n  .ngx-select__selected-single, .ngx-select__selected-plural{\n    display:-webkit-inline-box;\n    display:-ms-inline-flexbox;\n    display:inline-flex;\n    -webkit-box-align:center;\n        -ms-flex-align:center;\n            align-items:center;\n    overflow:hidden; }\n    .ngx-select__selected-single span, .ngx-select__selected-plural span{\n      overflow:hidden;\n      text-overflow:ellipsis; }\n  .ngx-select__selected-plural{\n    outline:0;\n    margin:0 3px 3px 0; }\n.input-group > .dropdown{\n  position:static; }\n`],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxSelectComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxSelectComponent implements INgxSelectOptions, ControlValueAccessor, DoCheck, AfterContentChecked {\n    @Input() public items: any[];\n    @Input() public optionValueField = 'id';\n    @Input() public optionTextField = 'text';\n    @Input() public optGroupLabelField = 'label';\n    @Input() public optGroupOptionsField = 'options';\n    @Input() public multiple = false;\n    @Input() public allowClear = false;\n    @Input() public placeholder = '';\n    @Input() public noAutoComplete = false;\n    @Input() public disabled = false;\n    @Input() public defaultValue: any[] = [];\n    @Input() public autoSelectSingleOption = false;\n    @Input() public autoClearSearch = false;\n    @Input() public noResultsFound = 'No results found';\n    @Input() public size: 'small' | 'default' | 'large' = 'default';\n    @Input() public searchCallback: (search: string, item: INgxSelectOption) => boolean;\n    public keyCodeToRemoveSelected = 'Delete';\n    public keyCodeToOptionsOpen = 'Enter';\n    public keyCodeToOptionsClose = 'Escape';\n    public keyCodeToOptionsSelect = 'Enter';\n    public keyCodeToNavigateFirst = 'ArrowLeft';\n    public keyCodeToNavigatePrevious = 'ArrowUp';\n    public keyCodeToNavigateNext = 'ArrowDown';\n    public keyCodeToNavigateLast = 'ArrowRight';\n\n    @Output() public typed = new EventEmitter<string>();\n    @Output() public focus = new EventEmitter<void>();\n    @Output() public blur = new EventEmitter<void>();\n    @Output() public open = new EventEmitter<void>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public select = new EventEmitter<any>();\n    @Output() public remove = new EventEmitter<any>();\n    @Output() public navigated = new EventEmitter<INgxOptionNavigated>();\n    @Output() public selectionChanges = new EventEmitter<INgxSelectOption[]>();\n\n    @ViewChild('main') protected mainElRef: ElementRef;\n    @ViewChild('input') protected inputElRef: ElementRef;\n    @ViewChild('choiceMenu') protected choiceMenuElRef: ElementRef;\n\n    @ContentChild(NgxSelectOptionDirective, {read: TemplateRef}) templateOption: NgxSelectOptionDirective;\n    @ContentChild(NgxSelectOptionSelectedDirective, {read: TemplateRef}) templateSelectedOption: NgxSelectOptionSelectedDirective;\n    @ContentChild(NgxSelectOptionNotFoundDirective, {read: TemplateRef}) templateOptionNotFound: NgxSelectOptionNotFoundDirective;\n\n    public optionsOpened = false;\n    public optionsFiltered: TSelectOption[];\n\n    private optionActive: NgxSelectOption;\n    private itemsDiffer: IterableDiffer<any>;\n    private defaultValueDiffer: IterableDiffer<any[]>;\n    private actualValue: any[] = [];\n\n    public subjOptions = new BehaviorSubject<TSelectOption[]>([]);\n    private subjSearchText = new BehaviorSubject<string>('');\n\n    private subjOptionsSelected = new BehaviorSubject<NgxSelectOption[]>([]);\n    private subjExternalValue = new BehaviorSubject<any[]>([]);\n    private subjDefaultValue = new BehaviorSubject<any[]>([]);\n    private subjRegisterOnChange = new Subject();\n\n    private cacheOptionsFilteredFlat: NgxSelectOption[];\n    private cacheElementOffsetTop: number;\n\n    private _focusToInput = false;\n    public isFocused = false;\n\n    constructor(iterableDiffers: IterableDiffers, private sanitizer: DomSanitizer, private cd: ChangeDetectorRef,\n                @Inject(NGX_SELECT_OPTIONS) @Optional() defaultOptions: INgxSelectOptions) {\n        Object.assign(this, defaultOptions);\n\n        // differs\n        this.itemsDiffer = iterableDiffers.find([]).create<any>(null);\n        this.defaultValueDiffer = iterableDiffers.find([]).create<any>(null);\n\n        // observers\n        this.typed.subscribe((text: string) => this.subjSearchText.next(text));\n        this.subjOptionsSelected.subscribe((options: NgxSelectOption[]) => this.selectionChanges.emit(options));\n        let cacheExternalValue: any[];\n        const subjActualValue = this.subjExternalValue\n            .map((v: any[]) => cacheExternalValue = v === null ? [] : [].concat(v))\n            .merge(this.subjOptionsSelected.map((options: NgxSelectOption[]) =>\n                options.map((o: NgxSelectOption) => o.value)\n            ))\n            .combineLatest(this.subjDefaultValue, (eVal: any[], dVal: any[]) => {\n                const newVal = _.isEqual(eVal, dVal) ? [] : eVal;\n                return newVal.length ? newVal : dVal;\n            })\n            .distinctUntilChanged((x, y) => _.isEqual(x, y))\n            .share();\n\n        subjActualValue\n            .combineLatest(this.subjRegisterOnChange, (actualValue: any[]) => actualValue)\n            .subscribe((actualValue: any[]) => {\n                this.actualValue = actualValue;\n                if (!_.isEqual(actualValue, cacheExternalValue)) {\n                    cacheExternalValue = actualValue;\n                    if (this.multiple) {\n                        this.onChange(actualValue);\n                    } else {\n                        this.onChange(actualValue.length ? actualValue[0] : null);\n                    }\n                }\n            });\n\n        this.subjOptions\n            .flatMap((options: TSelectOption[]) => Observable\n                .from(options)\n                .flatMap((option: TSelectOption) => option instanceof NgxSelectOption\n                    ? Observable.of(option)\n                    : (option instanceof NgxSelectOptGroup ? Observable.from(option.options) : Observable.empty())\n                )\n                .toArray()\n            )\n            .combineLatest(subjActualValue, (optionsFlat: NgxSelectOption[], actualValue: any[]) => {\n                Observable.from(optionsFlat)\n                    .filter((option: NgxSelectOption) => actualValue.indexOf(option.value) !== -1)\n                    .toArray()\n                    .filter((options: NgxSelectOption[]) => !_.isEqual(options, this.subjOptionsSelected.value))\n                    .subscribe((options: NgxSelectOption[]) => this.subjOptionsSelected.next(options));\n            })\n            .subscribe();\n\n        this.subjOptions\n            .combineLatest(this.subjOptionsSelected, this.subjSearchText,\n                (options: TSelectOption[], selectedOptions: NgxSelectOption[], search: string) => {\n                    this.optionsFiltered = this.filterOptions(search, options, selectedOptions);\n                    this.cacheOptionsFilteredFlat = null;\n                    this.navigateOption(ENavigation.firstIfOptionActiveInvisible);\n                    return selectedOptions;\n                }\n            )\n            .flatMap((selectedOptions: NgxSelectOption[]) => {\n                return this.optionsFilteredFlat().filter((flatOptions: NgxSelectOption[]) =>\n                    this.autoSelectSingleOption && flatOptions.length === 1 && !selectedOptions.length\n                );\n            })\n            .subscribe((flatOptions: NgxSelectOption[]) => this.subjOptionsSelected.next(flatOptions));\n    }\n\n    public setFormControlSize(otherClassNames: Object = {}, useFormControl: boolean = true) {\n        const formControlExtraClasses = useFormControl ? {\n            'form-control-sm input-sm': this.size === 'small',\n            'form-control-lg input-lg': this.size === 'large'\n        } : {};\n        return Object.assign(formControlExtraClasses, otherClassNames);\n    }\n\n    public setBtnSize() {\n        return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'};\n    }\n\n    public get optionsSelected(): NgxSelectOption[] {\n        return this.subjOptionsSelected.value;\n    }\n\n    public mainClicked(event: INgxSelectComponentMouseEvent) {\n        event.clickedSelectComponent = this;\n        if (!this.isFocused) {\n            this.isFocused = true;\n            this.focus.emit();\n        }\n    }\n\n    @HostListener('document:focusin', ['$event'])\n    @HostListener('document:click', ['$event'])\n    public documentClick(event: INgxSelectComponentMouseEvent) {\n        if (event.clickedSelectComponent !== this) {\n            if (this.optionsOpened) {\n                this.optionsClose();\n                this.cd.detectChanges(); // fix error because of delay between different events\n            }\n            if (this.isFocused) {\n                this.isFocused = false;\n                this.blur.emit();\n            }\n        }\n    }\n\n    private optionsFilteredFlat(): Observable<NgxSelectOption[]> {\n        if (this.cacheOptionsFilteredFlat) {\n            return Observable.of(this.cacheOptionsFilteredFlat);\n        }\n\n        return Observable.from(this.optionsFiltered)\n            .flatMap<TSelectOption, NgxSelectOption>((option: TSelectOption) =>\n                option instanceof NgxSelectOption ? Observable.of(option) :\n                    (option instanceof NgxSelectOptGroup ? Observable.from(option.optionsFiltered) : Observable.empty())\n            )\n            .filter((optionsFilteredFlat: NgxSelectOption) => !optionsFilteredFlat.disabled)\n            .toArray()\n            .do((optionsFilteredFlat: NgxSelectOption[]) => this.cacheOptionsFilteredFlat = optionsFilteredFlat);\n    }\n\n    private navigateOption(navigation: ENavigation) {\n        this.optionsFilteredFlat()\n            .map<NgxSelectOption[], INgxOptionNavigated>((options: NgxSelectOption[]) => {\n                const navigated: INgxOptionNavigated = {index: -1, activeOption: null, filteredOptionList: options};\n                let newActiveIdx;\n                switch (navigation) {\n                    case ENavigation.first:\n                        navigated.index = 0;\n                        break;\n                    case ENavigation.previous:\n                        newActiveIdx = options.indexOf(this.optionActive) - 1;\n                        navigated.index = newActiveIdx >= 0 ? newActiveIdx : options.length - 1;\n                        break;\n                    case ENavigation.next:\n                        newActiveIdx = options.indexOf(this.optionActive) + 1;\n                        navigated.index = newActiveIdx < options.length ? newActiveIdx : 0;\n                        break;\n                    case ENavigation.last:\n                        navigated.index = options.length - 1;\n                        break;\n                    case ENavigation.firstSelected:\n                        if (this.subjOptionsSelected.value.length) {\n                            navigated.index = options.indexOf(this.subjOptionsSelected.value[0]);\n                        }\n                        break;\n                    case ENavigation.firstIfOptionActiveInvisible:\n                        const idxOfOptionActive = options.indexOf(this.optionActive);\n                        navigated.index = idxOfOptionActive > 0 ? idxOfOptionActive : 0;\n                        break;\n                }\n                navigated.activeOption = options[navigated.index];\n                return navigated;\n            })\n            .subscribe((newNavigated: INgxOptionNavigated) => this.optionActivate(newNavigated));\n    }\n\n    public ngDoCheck(): void {\n        if (this.itemsDiffer.diff(this.items)) {\n            this.subjOptions.next(this.buildOptions(this.items));\n        }\n\n        const defVal = this.defaultValue ? [].concat(this.defaultValue) : [];\n        if (this.defaultValueDiffer.diff(defVal)) {\n            this.subjDefaultValue.next(defVal);\n        }\n    }\n\n    public ngAfterContentChecked(): void {\n        if (this._focusToInput && this.checkInputVisibility() && this.inputElRef &&\n            this.inputElRef.nativeElement !== document.activeElement) {\n            this._focusToInput = false;\n            this.inputElRef.nativeElement.focus();\n        }\n    }\n\n    public canClearNotMultiple(): boolean {\n        return this.allowClear && !!this.subjOptionsSelected.value.length &&\n            (!this.subjDefaultValue.value.length || this.subjDefaultValue.value[0] !== this.actualValue[0]);\n    }\n\n    public focusToInput(): void {\n        this._focusToInput = true;\n    }\n\n    public inputKeyDown(event: KeyboardEvent) {\n        const keysForOpenedState = [\n            this.keyCodeToOptionsSelect,\n            this.keyCodeToNavigateFirst,\n            this.keyCodeToNavigatePrevious,\n            this.keyCodeToNavigateNext,\n            this.keyCodeToNavigateLast,\n        ];\n        const keysForClosedState = [this.keyCodeToOptionsOpen, this.keyCodeToRemoveSelected];\n\n        if (this.optionsOpened && keysForOpenedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case this.keyCodeToOptionsSelect:\n                    this.optionSelect(this.optionActive);\n                    this.navigateOption(ENavigation.next);\n                    break;\n                case this.keyCodeToNavigateFirst:\n                    this.navigateOption(ENavigation.first);\n                    break;\n                case this.keyCodeToNavigatePrevious:\n                    this.navigateOption(ENavigation.previous);\n                    break;\n                case this.keyCodeToNavigateLast:\n                    this.navigateOption(ENavigation.last);\n                    break;\n                case this.keyCodeToNavigateNext:\n                    this.navigateOption(ENavigation.next);\n                    break;\n            }\n        } else if (!this.optionsOpened && keysForClosedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case this.keyCodeToOptionsOpen:\n                    this.optionsOpen();\n                    break;\n                case this.keyCodeToRemoveSelected:\n                    this.optionRemove(this.subjOptionsSelected.value[this.subjOptionsSelected.value.length - 1], event);\n                    break;\n            }\n        }\n    }\n\n    public mainKeyUp(event: KeyboardEvent): void {\n        if (event.code === this.keyCodeToOptionsClose) {\n            this.optionsClose(/*true*/);\n        }\n    }\n\n    public trackByOption(index: number, option: TSelectOption) {\n        return option instanceof NgxSelectOption ? option.value :\n            (option instanceof NgxSelectOptGroup ? option.label : option);\n    }\n\n    public checkInputVisibility(): boolean {\n        return (this.multiple === true) || (this.optionsOpened && !this.noAutoComplete);\n    }\n\n    /** @internal */\n    public inputKeyUp(value: string = '') {\n        if (!this.optionsOpened && value) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public doInputText(value: string) {\n        if (this.optionsOpened) {\n            this.typed.emit(value);\n        }\n    }\n\n    /** @internal */\n    public inputClick(value: string = '') {\n        if (!this.optionsOpened) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public sanitize(html: string): SafeHtml {\n        return html ? this.sanitizer.bypassSecurityTrustHtml(html) : null;\n    }\n\n    /** @internal */\n    public highlightOption(option: NgxSelectOption): SafeHtml {\n        if (this.inputElRef) {\n            return option.renderText(this.sanitizer, this.inputElRef.nativeElement.value);\n        }\n        return option.renderText(this.sanitizer, '');\n    }\n\n    /** @internal */\n    public optionSelect(option: NgxSelectOption, event: Event = null): void {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (option && !option.disabled) {\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).concat([option]));\n            this.select.emit(option.value);\n            this.optionsClose(/*true*/);\n            this.onTouched();\n        }\n    }\n\n    /** @internal */\n    public optionRemove(option: NgxSelectOption, event: Event): void {\n        if (!this.disabled && option) {\n            event.stopPropagation();\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).filter(o => o !== option));\n            this.remove.emit(option.value);\n        }\n    }\n\n    /** @internal */\n    public isOptionActive(option: NgxSelectOption, element: HTMLElement) {\n        if (this.optionActive === option) {\n            this.ensureVisibleElement(element);\n            return true;\n        }\n        return false;\n    }\n\n    /** @internal */\n    public optionActivate(navigated: INgxOptionNavigated): void {\n        if ((this.optionActive !== navigated.activeOption) &&\n            (!navigated.activeOption || !navigated.activeOption.disabled)) {\n            this.optionActive = navigated.activeOption;\n            this.navigated.emit(navigated);\n        }\n    }\n\n    private filterOptions(search: string, options: TSelectOption[], selectedOptions: NgxSelectOption[]): TSelectOption[] {\n        const regExp = new RegExp(escapeString(search), 'i'),\n            filterOption = (option: NgxSelectOption) => {\n                if (this.searchCallback) {\n                    return this.searchCallback(search, option);\n                }\n                return (!search || regExp.test(option.text)) && (!this.multiple || selectedOptions.indexOf(option) === -1);\n            };\n\n        return options.filter((option: TSelectOption) => {\n            if (option instanceof NgxSelectOption) {\n                return filterOption(<NgxSelectOption>option);\n            } else if (option instanceof NgxSelectOptGroup) {\n                const subOp = <NgxSelectOptGroup>option;\n                subOp.filter((subOption: NgxSelectOption) => filterOption(subOption));\n                return subOp.optionsFiltered.length;\n            }\n        });\n    }\n\n    private ensureVisibleElement(element: HTMLElement) {\n        if (this.choiceMenuElRef && this.cacheElementOffsetTop !== element.offsetTop) {\n            this.cacheElementOffsetTop = element.offsetTop;\n            const container: HTMLElement = this.choiceMenuElRef.nativeElement;\n            if (this.cacheElementOffsetTop < container.scrollTop) {\n                container.scrollTop = this.cacheElementOffsetTop;\n            } else if (this.cacheElementOffsetTop + element.offsetHeight > container.scrollTop + container.clientHeight) {\n                container.scrollTop = this.cacheElementOffsetTop + element.offsetHeight - container.clientHeight;\n            }\n        }\n    }\n\n    public optionsOpen(search: string = '') {\n        if (!this.disabled) {\n            this.optionsOpened = true;\n            this.subjSearchText.next(search);\n            if (!this.multiple && this.subjOptionsSelected.value.length) {\n                this.navigateOption(ENavigation.firstSelected);\n            } else {\n                this.navigateOption(ENavigation.first);\n            }\n            this.focusToInput();\n            this.open.emit();\n        }\n    }\n\n    public optionsClose(/*focusToHost: boolean = false*/) {\n        this.optionsOpened = false;\n        // if (focusToHost) {\n        //     const x = window.scrollX, y = window.scrollY;\n        //     this.mainElRef.nativeElement.focus();\n        //     window.scrollTo(x, y);\n        // }\n        this.close.emit();\n\n        if (this.autoClearSearch && this.multiple && this.inputElRef) {\n            this.inputElRef.nativeElement.value = null;\n        }\n    }\n\n    private buildOptions(data: any[]): Array<NgxSelectOption | NgxSelectOptGroup> {\n        const result: Array<NgxSelectOption | NgxSelectOptGroup> = [];\n        if (Array.isArray(data)) {\n            let option: NgxSelectOption;\n            data.forEach((item: any) => {\n                const isOptGroup = typeof item === 'object' && item !== null &&\n                    propertyExists(item, this.optGroupLabelField) && propertyExists(item, this.optGroupOptionsField) &&\n                    Array.isArray(item[this.optGroupOptionsField]);\n                if (isOptGroup) {\n                    const optGroup = new NgxSelectOptGroup(item[this.optGroupLabelField]);\n                    item[this.optGroupOptionsField].forEach((subOption: NgxSelectOption) => {\n                        if (option = this.buildOption(subOption, optGroup)) {\n                            optGroup.options.push(option);\n                        }\n                    });\n                    result.push(optGroup);\n                } else if (option = this.buildOption(item, null)) {\n                    result.push(option);\n                }\n            });\n        }\n        return result;\n    }\n\n    private buildOption(data: any, parent: NgxSelectOptGroup): NgxSelectOption {\n        let value, text, disabled;\n        if (typeof data === 'string' || typeof data === 'number') {\n            value = text = data;\n            disabled = false;\n        } else if (typeof data === 'object' && data !== null &&\n            (propertyExists(data, this.optionValueField) || propertyExists(data, this.optionTextField))) {\n            value = propertyExists(data, this.optionValueField) ? data[this.optionValueField] : data[this.optionTextField];\n            text = propertyExists(data, this.optionTextField) ? data[this.optionTextField] : data[this.optionValueField];\n            disabled = propertyExists(data, 'disabled') ? data['disabled'] : false;\n        } else {\n            return null;\n        }\n        return new NgxSelectOption(value, text, disabled, data, parent);\n    }\n\n    //////////// interface ControlValueAccessor ////////////\n    public onChange = (v: any) => v;\n\n    public onTouched: () => void = () => null;\n\n    public writeValue(obj: any): void {\n        this.subjExternalValue.next(obj);\n    }\n\n    public registerOnChange(fn: (_: any) => {}): void {\n        this.onChange = fn;\n        this.subjRegisterOnChange.next();\n    }\n\n    public registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n}\n",
    "import {Directive, TemplateRef} from '@angular/core';\n\n@Directive({selector: '[ngx-select-option]'})\nexport class NgxSelectOptionDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-selected]'})\nexport class NgxSelectOptionSelectedDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-not-found]'})\nexport class NgxSelectOptionNotFoundDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n",
    "import {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {INgxSelectOptGroup, INgxSelectOption, INgxSelectOptionBase, TNgxSelectOptionType} from './ngx-select.interfaces';\n\nconst escapeString = escapeStringNs;\n\nexport class NgxSelectOption implements INgxSelectOption, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'option';\n\n    constructor(public value: number | string,\n                public text: string,\n                public disabled: boolean,\n                public data: any,\n                private _parent: NgxSelectOptGroup = null) {\n    }\n\n    public get parent(): NgxSelectOptGroup {\n        return this._parent;\n    }\n\n    private cacheHighlightText: string;\n    private cacheRenderedText: SafeHtml = null;\n\n    public renderText(sanitizer: DomSanitizer, highlightText: string): SafeHtml {\n        if (this.cacheHighlightText !== highlightText || this.cacheRenderedText === null) {\n            this.cacheHighlightText = highlightText;\n            if (this.cacheHighlightText) {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml((this.text + '').replace(\n                    new RegExp(escapeString(this.cacheHighlightText), 'gi'), '<strong>$&</strong>'\n                ));\n            } else {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml(this.text);\n            }\n        }\n        return this.cacheRenderedText;\n    }\n}\n\nexport class NgxSelectOptGroup implements INgxSelectOptGroup, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'optgroup';\n\n    public optionsFiltered: NgxSelectOption[];\n\n    constructor(public label: string,\n                public options: NgxSelectOption[] = []) {\n        this.filter(() => true);\n    }\n\n    public filter(callbackFn: (value: NgxSelectOption) => any): void {\n        this.optionsFiltered = this.options.filter((option: NgxSelectOption) => callbackFn(option));\n    }\n}\n\nexport type TSelectOption = NgxSelectOptGroup | NgxSelectOption;\n"
  ],
  "names": [
    "escapeString"
  ],
  "mappings": "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"
}
